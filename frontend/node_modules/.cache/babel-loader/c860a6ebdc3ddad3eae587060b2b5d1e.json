{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\Poshak\\\\frontend\\\\src\\\\screens\\\\CartScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport { addToCart } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartScreen = ({\n  match,\n  location,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 8,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Shopping Cart \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n        children: [\"You cart is empty. Please add an item! \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \" Back \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 91\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 43\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        variant: \"flush\",\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartScreen, \"1b/6BcrzFg90k2qO1tRu8krUc0E=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartScreen;\nexport default CartScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartScreen\");","map":{"version":3,"sources":["C:/Users/DELL/Desktop/Poshak/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","Link","Row","Col","ListGroup","Image","Form","Button","Card","useDispatch","useSelector","Message","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","Number","split","dispatch","cart","state","cartItems","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,KAA9B,EAAqCC,IAArC,EAA2CC,MAA3C,EAAmDC,IAAnD,QAA+D,iBAA/D;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,SAAT,QAA0B,wBAA1B;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAgC;AAAA;;AAC/C,QAAMC,SAAS,GAAGH,KAAK,CAACI,MAAN,CAAaC,EAA/B;AAEA,QAAMC,GAAG,GAAGL,QAAQ,CAACM,MAAT,GAAkBC,MAAM,CAAEP,QAAQ,CAACM,MAAT,CAAgBE,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,CAAF,CAAxB,GAA2D,CAAvE;AAEA,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AAEA,QAAMgB,IAAI,GAAGf,WAAW,CAAEgB,KAAK,IAAIA,KAAK,CAACD,IAAjB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBF,IAAtB;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIiB,SAAJ,EAAc;AACVO,MAAAA,QAAQ,CAACZ,SAAS,CAACK,SAAD,EAAYG,GAAZ,CAAV,CAAR;AACH;AACJ,GAJQ,EAIN,CAACI,QAAD,EAAWP,SAAX,EAAsBG,GAAtB,CAJM,CAAT;AAOA,sBACI,QAAC,GAAD;AAAA,4BACI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAG,CAAV;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKO,SAAS,CAACC,MAAV,KAAqB,CAArB,gBAAyB,QAAC,OAAD;AAAA,2EAAgD,QAAC,IAAD;AAAM,UAAA,EAAE,EAAG,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzB,gBACG,QAAC,SAAD;AAAW,QAAA,OAAO,EAAE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAG;AAAV;AAAA;AAAA;AAAA;AAAA,YAPJ,eASI,QAAC,GAAD;AAAK,MAAA,EAAE,EAAG;AAAV;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAhCD;;GAAMf,U;UAKeJ,W,EAEJC,W;;;KAPXG,U;AAkCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport { addToCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number (location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector (state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if (productId){\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md= {8}>\r\n                <h1> Shopping Cart </h1>\r\n                {cartItems.length === 0 ? <Message>You cart is empty. Please add an item! <Link to = '/'> Back </Link> </Message> : (\r\n                    <ListGroup variant= 'flush'> </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md= {2}>\r\n            </Col>\r\n            <Col md= {2}>\r\n\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n"]},"metadata":{},"sourceType":"module"}