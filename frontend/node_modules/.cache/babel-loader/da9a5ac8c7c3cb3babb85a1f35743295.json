{"ast":null,"code":"import axios from 'axios';\nimport { BLOG_LIST_REQUEST, BLOG_LIST_SUCCESS, BLOG_LIST_FAIL, BLOG_DETAILS_REQUEST, BLOG_DETAILS_SUCCESS, BLOG_DETAILS_FAIL, BLOG_DELETE_REQUEST, BLOG_DELETE_SUCCESS, BLOG_DELETE_FAIL, BLOG_CREATE_REQUEST, BLOG_CREATE_SUCCESS, BLOG_CREATE_FAIL, BLOG_UPDATE_REQUEST, BLOG_UPDATE_SUCCESS, BLOG_UPDATE_FAIL } from '../constants/blogConstants.js';\nimport { logout } from './userActions';\nexport const listBlogs = async dispatch => {\n  try {\n    dispatch({\n      type: BLOG_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/blogs`);\n    dispatch({\n      type: BLOG_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BLOG_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listBlogDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: BLOG_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/blogs/${id}`);\n    dispatch({\n      type: BLOG_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BLOG_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteBlog = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BLOG_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/blogs/${id}`, config);\n    dispatch({\n      type: BLOG_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized. Token Failed!') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: BLOG_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createBlog = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BLOG_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/blogs', {}, config);\n    dispatch({\n      type: BLOG_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized. Token Failed!') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: BLOG_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateBlog = blog => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BLOG_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/blogs/${blog._id}`, blog, config);\n    dispatch({\n      type: BLOG_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: BLOG_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized. Token Failed!') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: BLOG_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/dell/Desktop/Poshak/frontend/src/actions/blogActions.js"],"names":["axios","BLOG_LIST_REQUEST","BLOG_LIST_SUCCESS","BLOG_LIST_FAIL","BLOG_DETAILS_REQUEST","BLOG_DETAILS_SUCCESS","BLOG_DETAILS_FAIL","BLOG_DELETE_REQUEST","BLOG_DELETE_SUCCESS","BLOG_DELETE_FAIL","BLOG_CREATE_REQUEST","BLOG_CREATE_SUCCESS","BLOG_CREATE_FAIL","BLOG_UPDATE_REQUEST","BLOG_UPDATE_SUCCESS","BLOG_UPDATE_FAIL","logout","listBlogs","dispatch","type","data","get","payload","error","response","message","listBlogDetails","id","deleteBlog","getState","userLogin","userInfo","config","headers","Authorization","token","delete","createBlog","post","updateBlog","blog","put","_id"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {\r\n\tBLOG_LIST_REQUEST,\r\n\tBLOG_LIST_SUCCESS,\r\n\tBLOG_LIST_FAIL,\r\n\tBLOG_DETAILS_REQUEST,\r\n\tBLOG_DETAILS_SUCCESS,\r\n\tBLOG_DETAILS_FAIL,\r\n\tBLOG_DELETE_REQUEST,\r\n\tBLOG_DELETE_SUCCESS,\r\n\tBLOG_DELETE_FAIL,\r\n\tBLOG_CREATE_REQUEST,\r\n\tBLOG_CREATE_SUCCESS,\r\n\tBLOG_CREATE_FAIL,\r\n\tBLOG_UPDATE_REQUEST,\r\n\tBLOG_UPDATE_SUCCESS,\r\n\tBLOG_UPDATE_FAIL,\r\n} from '../constants/blogConstants.js';\r\nimport { logout } from './userActions';\r\n\r\nexport const listBlogs = async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: BLOG_LIST_REQUEST });\r\n\t\tconst { data } = await axios.get(`/api/blogs`);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: BLOG_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: BLOG_LIST_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const listBlogDetails = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({ type: BLOG_DETAILS_REQUEST });\r\n\t\tconst { data } = await axios.get(`/api/blogs/${id}`);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: BLOG_DETAILS_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: BLOG_DETAILS_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteBlog = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: BLOG_DELETE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tawait axios.delete(`/api/blogs/${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: BLOG_DELETE_SUCCESS,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message;\r\n\t\tif (message === 'Not authorized. Token Failed!') {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: BLOG_DELETE_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const createBlog = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: BLOG_CREATE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post('/api/blogs', {}, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: BLOG_CREATE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message;\r\n\t\tif (message === 'Not authorized. Token Failed!') {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: BLOG_CREATE_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const updateBlog = (blog) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: BLOG_UPDATE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.put(`/api/blogs/${blog._id}`, blog, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: BLOG_UPDATE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\tdispatch({ type: BLOG_DETAILS_SUCCESS, payload: data });\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message;\r\n\t\tif (message === 'Not authorized. Token Failed!') {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: BLOG_UPDATE_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t});\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}