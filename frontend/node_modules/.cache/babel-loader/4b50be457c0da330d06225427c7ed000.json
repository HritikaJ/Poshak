{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL } from '../constants/orderConstants';\nimport { logout } from './userActions';\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\nimport axios from 'axios';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/orders', order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data\n    }); // localStorage.removeItem('cartItems');\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized. Token Failed!') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized. Token Failed!') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized. Token Failed!') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized. Token Failed!') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deliverOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config);\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized. Token Failed!') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Hritika/Poshak/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","logout","CART_CLEAR_ITEMS","axios","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","message","response","getOrderDetails","id","get","listMyOrders","listOrders","deliverOrder","put","_id"],"mappings":"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","sourcesContent":["import {\r\n\tORDER_CREATE_REQUEST,\r\n\tORDER_CREATE_SUCCESS,\r\n\tORDER_CREATE_FAIL,\r\n\tORDER_DETAILS_REQUEST,\r\n\tORDER_DETAILS_SUCCESS,\r\n\tORDER_DETAILS_FAIL,\r\n\tORDER_LIST_MY_REQUEST,\r\n\tORDER_LIST_MY_SUCCESS,\r\n\tORDER_LIST_MY_FAIL,\r\n\tORDER_LIST_REQUEST,\r\n\tORDER_LIST_SUCCESS,\r\n\tORDER_LIST_FAIL,\r\n\tORDER_DELIVER_REQUEST,\r\n\tORDER_DELIVER_SUCCESS,\r\n\tORDER_DELIVER_FAIL,\r\n} from '../constants/orderConstants';\r\nimport { logout } from './userActions';\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\nimport axios from 'axios';\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_CREATE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post('/api/orders', order, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_CREATE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: CART_CLEAR_ITEMS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\t// localStorage.removeItem('cartItems');\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message;\r\n\t\tif (message === 'Not authorized. Token Failed!') {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_CREATE_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DETAILS_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DETAILS_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message;\r\n\t\tif (message === 'Not authorized. Token Failed!') {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DETAILS_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_MY_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_MY_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message;\r\n\t\tif (message === 'Not authorized. Token Failed!') {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_MY_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`/api/orders`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message;\r\n\t\tif (message === 'Not authorized. Token Failed!') {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_LIST_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DELIVER_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.put(\r\n\t\t\t`/api/orders/${order._id}/deliver`,\r\n\t\t\t{},\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DELIVER_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message;\r\n\t\tif (message === 'Not authorized. Token Failed!') {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: ORDER_DELIVER_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t});\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}