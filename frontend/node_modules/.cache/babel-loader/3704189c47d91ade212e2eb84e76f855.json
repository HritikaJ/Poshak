{"ast":null,"code":"var _jsxFileName = \"C:\\\\Hritika\\\\Poshak\\\\frontend\\\\src\\\\screens\\\\BlogListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listBlogs, deleteBlogs } from '../actions/blogActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BlogListScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const dispatch = useDispatch(); // const blogList = useSelector((state) => state.blogList);\n  // const { loading, error, users } = blogList;\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const blogDelete = useSelector(state => state.blogDelete);\n  const {\n    success: successDelete\n  } = blogDelete;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listBlogs());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n\n  const deleteHandler = id => {\n    if (window.confirm('Do you want to delete the blog?')) {\n      dispatch(deleteBlogs(id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'left'\n      },\n      children: \" Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      className: \"table-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" ID \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Blog Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Image \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Text \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BlogListScreen, \"JNfPKBJi0TQz5t0jC4jrSMwVmZI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = BlogListScreen;\nexport default BlogListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogListScreen\");","map":{"version":3,"sources":["C:/Hritika/Poshak/frontend/src/screens/BlogListScreen.js"],"names":["React","useEffect","LinkContainer","Table","Button","Row","Col","useDispatch","useSelector","Message","Loader","listBlogs","deleteBlogs","BlogListScreen","history","match","dispatch","userLogin","state","userInfo","blogDelete","success","successDelete","isAdmin","push","deleteHandler","id","window","confirm","textAlign"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,GAA7B,QAAwC,iBAAxC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,wBAAvC;;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAAwB;AAAA;;AAC9C,QAAMC,QAAQ,GAAGT,WAAW,EAA5B,CAD8C,CAG9C;AACA;;AAEA,QAAMU,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACD,SAAlB,CAA7B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAeF,SAArB;AAEA,QAAMG,UAAU,GAAGZ,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACE,UAAlB,CAA9B;AACA,QAAM;AAAEC,IAAAA,OAAO,EAAEC;AAAX,MAA6BF,UAAnC;AAEAnB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIkB,QAAQ,IAAIA,QAAQ,CAACI,OAAzB,EAAkC;AACjCP,MAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACA,KAFD,MAEO;AACNG,MAAAA,OAAO,CAACU,IAAR,CAAa,QAAb;AACA;AACD,GANQ,EAMN,CAACR,QAAD,EAAWF,OAAX,EAAoBK,QAApB,CANM,CAAT;;AAQA,QAAMM,aAAa,GAAIC,EAAD,IAAQ;AAC7B,QAAIC,MAAM,CAACC,OAAP,CAAe,iCAAf,CAAJ,EAAuD;AACtDZ,MAAAA,QAAQ,CAACJ,WAAW,CAACc,EAAD,CAAZ,CAAR;AACA;AACD,GAJD;;AAMA,sBACC;AAAA,4BACC;AAAI,MAAA,KAAK,EAAE;AAAEG,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,UAAU,MAAxC;AAAyC,MAAA,SAAS,EAAC,UAAnD;AAAA,6BACC;AAAA,+BACC;AAAA,kCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFD,eAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHD,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJD,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAuCA,CAjED;;GAAMhB,c;UACYN,W,EAKCC,W,EAGCA,W;;;KATdK,c;AAmEN,eAAeA,cAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listBlogs, deleteBlogs } from '../actions/blogActions';\r\n\r\nconst BlogListScreen = ({ history, match }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\t// const blogList = useSelector((state) => state.blogList);\r\n\t// const { loading, error, users } = blogList;\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst { userInfo } = userLogin;\r\n\r\n\tconst blogDelete = useSelector((state) => state.blogDelete);\r\n\tconst { success: successDelete } = blogDelete;\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userInfo && userInfo.isAdmin) {\r\n\t\t\tdispatch(listBlogs());\r\n\t\t} else {\r\n\t\t\thistory.push('/login');\r\n\t\t}\r\n\t}, [dispatch, history, userInfo]);\r\n\r\n\tconst deleteHandler = (id) => {\r\n\t\tif (window.confirm('Do you want to delete the blog?')) {\r\n\t\t\tdispatch(deleteBlogs(id));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h1 style={{ textAlign: 'left' }}> Blogs</h1>\r\n\t\t\t<Table striped bordered hover responsive className=\"table-sm\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th> ID </th>\r\n\t\t\t\t\t\t<th> Blog Name </th>\r\n\t\t\t\t\t\t<th> Image </th>\r\n\t\t\t\t\t\t<th> Text </th>\r\n\t\t\t\t\t\t<th> </th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t{/* <tbody>\r\n\t\t\t\t\t{blogs.map((blog) => (\r\n\t\t\t\t\t\t<tr key={blog._id}>\r\n\t\t\t\t\t\t\t<td>{blog._id}</td>\r\n\t\t\t\t\t\t\t<td>{blog.name}</td>\r\n\r\n\t\t\t\t\t\t\t<td> */}\r\n\t\t\t\t{/* <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n\t\t\t\t\t\t\t\t\t<Button variant=\"light\" className=\"btn-sm\">\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-edit\"></i>\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</LinkContainer> */}\r\n\t\t\t\t{/* <Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\t\t\t\t\tclassName=\"btn-sm\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => deleteHandler(blog._id)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<i className=\"fas fa-trash\"></i>\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody> */}\r\n\t\t\t</Table>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default BlogListScreen;\r\n"]},"metadata":{},"sourceType":"module"}