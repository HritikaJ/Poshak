{"ast":null,"code":"var _jsxFileName = \"C:\\\\Hritika\\\\Poshak\\\\frontend\\\\src\\\\screens\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { login } from '../actions/userActions'; //import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n//import { faEye } from '@fortawesome/free-solid-svg-icons'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin;\n  const redirect = location.search ? location.search.split('=')[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(login(email, password));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [error && /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 14\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" Email Address \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: [' ', \"We'll never share your email with anyone else.\", ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \" Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Enter password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-eye password-icon mt-3\" // style={{ marginTop: '5px' }}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: [' ', \"Sign In\", ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"py-3\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [' ', \"New to Poshak? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/userType\",\n          children: \" Register Here! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_s(LoginScreen, \"BzGu8FQYYpZCJvK13oRoP+xbLkk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = LoginScreen;\nexport default LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/Hritika/Poshak/frontend/src/screens/LoginScreen.js"],"names":["React","useState","useEffect","Link","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","FormContainer","login","LoginScreen","location","history","email","setEmail","password","setPassword","dispatch","userLogin","state","loading","error","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userActions';\r\n//import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n//import { faEye } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n\tconst [email, setEmail] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst userLogin = useSelector((state) => state.userLogin);\r\n\tconst { loading, error, userInfo } = userLogin;\r\n\r\n\tconst redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n\tuseEffect(() => {\r\n\t\tif (userInfo) {\r\n\t\t\thistory.push(redirect);\r\n\t\t}\r\n\t}, [history, userInfo, redirect]);\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(login(email, password));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<FormContainer>\r\n\t\t\t{error && <Message variant=\"danger\">{error}</Message>}\r\n\t\t\t{loading && <Loader />}\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t<h1>Sign In</h1>\r\n\t\t\t\t<Form.Group controlId=\"email\">\r\n\t\t\t\t\t<Form.Label> Email Address </Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tplaceholder=\"Enter email\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\t{' '}\r\n\t\t\t\t\t\tWe'll never share your email with anyone else.{' '}\r\n\t\t\t\t\t</Form.Text>\r\n\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t<Form.Group controlId=\"password\">\r\n\t\t\t\t\t<Form.Label> Password </Form.Label>\r\n\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Enter password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<i\r\n\t\t\t\t\tclassName=\"fa fa-eye password-icon mt-3\"\r\n\t\t\t\t\t// style={{ marginTop: '5px' }}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<Button type=\"submit\" variant=\"primary\">\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tSign In{' '}\r\n\t\t\t\t</Button>\r\n\t\t\t</Form>\r\n\r\n\t\t\t<Row className=\"py-3\">\r\n\t\t\t\t<Col>\r\n\t\t\t\t\t{' '}\r\n\t\t\t\t\tNew to Poshak? <Link to=\"/userType\"> Register Here! </Link>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</FormContainer>\r\n\t);\r\n};\r\n\r\nexport default LoginScreen;\r\n"]},"metadata":{},"sourceType":"module"}