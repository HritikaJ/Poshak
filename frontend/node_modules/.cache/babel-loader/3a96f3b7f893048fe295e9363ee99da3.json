{"ast":null,"code":"import axios from \"axios\";\nimport { BLOG_LIST_REQUEST, BLOG_LIST_SUCCESS, BLOG_LIST_FAIL, BLOG_DETAILS_REQUEST, BLOG_DETAILS_SUCCESS, BLOG_DETAILS_FAIL, BLOG_DELETE_REQUEST, BLOG_DELETE_SUCCESS, BLOG_DELETE_FAIL, BLOG_CREATE_REQUEST, BLOG_CREATE_SUCCESS, BLOG_CREATE_FAIL, BLOG_UPDATE_REQUEST, BLOG_UPDATE_SUCCESS, BLOG_UPDATE_FAIL } from \"../constants/blogConstants.js\";\nimport { logout } from \"./userActions\";\nexport const listBlogs = (keyword = \"\", pageNumber = \"\") => async dispatch => {\n  try {\n    dispatch({\n      type: BLOG_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/blogs?keyword=${keyword}&pageNumber=${pageNumber}`);\n    dispatch({\n      type: BLOG_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BLOG_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listBlogDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: BLOG_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/blogs/${id}`);\n    dispatch({\n      type: BLOG_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: BLOG_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteBlog = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BLOG_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/blogs/${id}`, config);\n    dispatch({\n      type: BLOG_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized. Token Failed!\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: BLOG_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createBlog = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BLOG_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/blogs\", {}, config);\n    dispatch({\n      type: BLOG_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized. Token Failed!\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: BLOG_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateBlog = blog => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: BLOG_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/blogs/${blog._id}`, blog, config);\n    dispatch({\n      type: BLOG_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: BLOG_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === \"Not authorized. Token Failed!\") {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: BLOG_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/dell/Desktop/Poshak/frontend/src/actions/blogActions.js"],"names":["axios","BLOG_LIST_REQUEST","BLOG_LIST_SUCCESS","BLOG_LIST_FAIL","BLOG_DETAILS_REQUEST","BLOG_DETAILS_SUCCESS","BLOG_DETAILS_FAIL","BLOG_DELETE_REQUEST","BLOG_DELETE_SUCCESS","BLOG_DELETE_FAIL","BLOG_CREATE_REQUEST","BLOG_CREATE_SUCCESS","BLOG_CREATE_FAIL","BLOG_UPDATE_REQUEST","BLOG_UPDATE_SUCCESS","BLOG_UPDATE_FAIL","logout","listBlogs","keyword","pageNumber","dispatch","type","data","get","payload","error","response","message","listBlogDetails","id","deleteBlog","getState","userLogin","userInfo","config","headers","Authorization","token","delete","createBlog","post","updateBlog","blog","put","_id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  BLOG_LIST_REQUEST,\r\n  BLOG_LIST_SUCCESS,\r\n  BLOG_LIST_FAIL,\r\n  BLOG_DETAILS_REQUEST,\r\n  BLOG_DETAILS_SUCCESS,\r\n  BLOG_DETAILS_FAIL,\r\n  BLOG_DELETE_REQUEST,\r\n  BLOG_DELETE_SUCCESS,\r\n  BLOG_DELETE_FAIL,\r\n  BLOG_CREATE_REQUEST,\r\n  BLOG_CREATE_SUCCESS,\r\n  BLOG_CREATE_FAIL,\r\n  BLOG_UPDATE_REQUEST,\r\n  BLOG_UPDATE_SUCCESS,\r\n  BLOG_UPDATE_FAIL,\r\n} from \"../constants/blogConstants.js\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const listBlogs =\r\n  (keyword = \"\", pageNumber = \"\") =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch({ type: BLOG_LIST_REQUEST });\r\n      const { data } = await axios.get(\r\n        `/api/blogs?keyword=${keyword}&pageNumber=${pageNumber}`\r\n      );\r\n\r\n      dispatch({\r\n        type: BLOG_LIST_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: BLOG_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const listBlogDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: BLOG_DETAILS_REQUEST });\r\n    const { data } = await axios.get(`/api/blogs/${id}`);\r\n\r\n    dispatch({\r\n      type: BLOG_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: BLOG_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteBlog = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: BLOG_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/blogs/${id}`, config);\r\n\r\n    dispatch({\r\n      type: BLOG_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized. Token Failed!\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: BLOG_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createBlog = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: BLOG_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(\"/api/blogs\", {}, config);\r\n\r\n    dispatch({\r\n      type: BLOG_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized. Token Failed!\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: BLOG_CREATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateBlog = (blog) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: BLOG_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/blogs/${blog._id}`, blog, config);\r\n\r\n    dispatch({\r\n      type: BLOG_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({ type: BLOG_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized. Token Failed!\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: BLOG_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}