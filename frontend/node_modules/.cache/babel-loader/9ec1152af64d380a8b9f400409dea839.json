{"ast":null,"code":"import { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from '../constants/userConstants';\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nimport axios from 'axios';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n  document.location.href = '/login';\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nc;\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        // 'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized. Token Failed!') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/users/profile', user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized. Token Failed!') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/users', config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized. Token Failed!') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized. Token Failed!') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_DETAILS_RESET\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized. Token Failed!') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Hritika/Poshak/frontend/src/actions/userActions.js"],"names":["USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_DETAILS_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","ORDER_LIST_MY_RESET","axios","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","document","location","href","register","name","c","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser","delete","updateUser","_id"],"mappings":"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","sourcesContent":["import {\r\n\tUSER_DETAILS_FAIL,\r\n\tUSER_DETAILS_REQUEST,\r\n\tUSER_DETAILS_SUCCESS,\r\n\tUSER_LOGIN_FAIL,\r\n\tUSER_LOGIN_REQUEST,\r\n\tUSER_LOGIN_SUCCESS,\r\n\tUSER_LOGOUT,\r\n\tUSER_REGISTER_FAIL,\r\n\tUSER_REGISTER_REQUEST,\r\n\tUSER_REGISTER_SUCCESS,\r\n\tUSER_UPDATE_PROFILE_FAIL,\r\n\tUSER_UPDATE_PROFILE_REQUEST,\r\n\tUSER_UPDATE_PROFILE_SUCCESS,\r\n\tUSER_DETAILS_RESET,\r\n\tUSER_LIST_REQUEST,\r\n\tUSER_LIST_SUCCESS,\r\n\tUSER_LIST_FAIL,\r\n\tUSER_LIST_RESET,\r\n\tUSER_DELETE_REQUEST,\r\n\tUSER_DELETE_SUCCESS,\r\n\tUSER_DELETE_FAIL,\r\n\tUSER_UPDATE_REQUEST,\r\n\tUSER_UPDATE_SUCCESS,\r\n\tUSER_UPDATE_FAIL,\r\n} from '../constants/userConstants';\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\r\nimport axios from 'axios';\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t'/api/users/login',\r\n\t\t\t{ email, password },\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data));\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n\tlocalStorage.removeItem('userInfo');\r\n\tlocalStorage.removeItem('cartItems');\r\n\tlocalStorage.removeItem('shippingAddress');\r\n\tlocalStorage.removeItem('paymentMethod');\r\n\tdispatch({ type: USER_LOGOUT });\r\n\tdispatch({ type: USER_DETAILS_RESET });\r\n\tdispatch({ type: ORDER_LIST_MY_RESET });\r\n\tdispatch({ type: USER_LIST_RESET });\r\n\tdocument.location.href = '/login';\r\n};\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.post(\r\n\t\t\t'/api/users',\r\n\t\t\t{ name, email, password },\r\n\t\t\tconfig\r\n\t\t);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\r\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data));\r\n\t} catch (error) {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_REGISTER_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\nc;\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t// 'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message;\r\n\t\tif (message === 'Not authorized. Token Failed!') {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_FAIL,\r\n\t\t\tpayload:\r\n\t\t\t\terror.response && error.response.data.message\r\n\t\t\t\t\t? error.response.data.message\r\n\t\t\t\t\t: error.message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_PROFILE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.put('/api/users/profile', user, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_PROFILE_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LOGIN_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\tlocalStorage.setItem('userInfo', JSON.stringify(data));\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message;\r\n\t\tif (message === 'Not authorized. Token Failed!') {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_PROFILE_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.get('/api/users', config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message;\r\n\t\tif (message === 'Not authorized. Token Failed!') {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: USER_LIST_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tawait axios.delete(`/api/users/${id}`, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_SUCCESS,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message;\r\n\t\tif (message === 'Not authorized. Token Failed!') {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DELETE_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_REQUEST,\r\n\t\t});\r\n\r\n\t\tconst {\r\n\t\t\tuserLogin: { userInfo },\r\n\t\t} = getState();\r\n\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tconst { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_SUCCESS,\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: USER_DETAILS_SUCCESS,\r\n\t\t\tpayload: data,\r\n\t\t});\r\n\t\tdispatch({ type: USER_DETAILS_RESET });\r\n\t} catch (error) {\r\n\t\tconst message =\r\n\t\t\terror.response && error.response.data.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message;\r\n\t\tif (message === 'Not authorized. Token Failed!') {\r\n\t\t\tdispatch(logout());\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: USER_UPDATE_FAIL,\r\n\t\t\tpayload: message,\r\n\t\t});\r\n\t}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}